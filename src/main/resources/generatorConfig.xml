<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	<!-- 此属性放在第一位置 -->
	<properties  resource="application.properties"/>
	
    <classPathEntry  location="D:\\generatorCode\\mysql-connector-java-8.0.11.jar" />
    
    
    <!-- 
     defaultModelType:指定生成对象的样式
	     1，conditional：类似hierarchical；
	     2，flat：所有内容（主键，blob）等全部生成在一个对象中；
	     3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class) 
     targetRuntime: 
     	 1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample； 
     	 2，MyBatis3Simple：类似MyBatis
     	 3，只是不生成XXXBySample； introspectedColumnImpl：类全限定名，用于扩展MBG -->
     	 
    <context id="mysql" targetRuntime="MyBatis3"  defaultModelType="flat">
       <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
       	 一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖  --> 
         <property name="autoDelimitKeywords" value="false"/> 
         <!-- 生成的Java文件的编码 --> 
         <property name="javaFileEncoding" value="UTF-8"/> 
         <!-- 格式化java代码 -->
		 <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>         
        <commentGenerator>
             <property  name="suppressDate" value="true" />
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>
        
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
            connectionURL="jdbc:mysql://127.0.0.1:3306/jz_data?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=GMT" userId="${spring.datasource.username}"
            password="${spring.datasource.password}" />
            
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL 和 
            NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>
        <!-- targetProject:自动生成代码的位置 -->  
      <javaModelGenerator targetPackage="com.jz.model"  targetProject="D:\generatorCode">
           <!--  enableSubPackages:是否让schema作为包的后缀     -->
            <property name="enableSubPackages" value="false" />
           <!--    从数据库返回的值被清理前后的空格     -->
            <property name="trimStrings" value="true" />
            <property name="constructorBased" value="true"></property>
            <property name="immutable" value="false"></property>
        </javaModelGenerator> 
       <!-- 生成mapxml文件 -->  
        <sqlMapGenerator targetPackage="mapper" targetProject="D:\generatorCode">
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator> 
         <!-- 生成mapxml对应client，也就是接口dao   XMLMAPPER 生成xml  ANNOTATEDMAPPER生成注解 -->  
       <javaClientGenerator type="XMLMAPPER"   targetPackage="com.jz.dao" targetProject="D:\generatorCode">
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator> 
       <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->  
        <table tableName="scheduler_config" domainObjectName="SchedulerConfig"
            enableCountByExample="true" enableUpdateByExample="true"
            enableDeleteByExample="true" enableSelectByExample="true"
            selectByExampleQueryId="true">

        </table>
    </context>
</generatorConfiguration>